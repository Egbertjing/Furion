/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../../common";
import type {
  IncomeMaker,
  IncomeMakerInterface,
} from "../../../contracts/income-sharing/IncomeMaker";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EmergencyWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "oldProportion",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "newProportion",
        type: "uint8",
      },
    ],
    name: "IncomeProportionChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "otherTokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "incomeTokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    name: "IncomeToToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newToken",
        type: "address",
      },
    ],
    name: "IncomeTokenChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "PRICE_SCALE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenB",
        type: "address",
      },
    ],
    name: "collectIncomeFromSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIncome",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "contract IFurionSwapFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "incomeProportion",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "incomeSharingVault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "incomeToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_incomeToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "contract IFurionSwapV2Router",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_newIncomeProportion",
        type: "uint8",
      },
    ],
    name: "setIncomeProportion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newIncomeToken",
        type: "address",
      },
    ],
    name: "setIncomeToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uint_MAX",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526068805460ff60a01b1916600560a41b17905534801561002357600080fd5b506116b3806100336000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063bc66ce0a11610097578063ecb72ffb11610066578063ecb72ffb146101eb578063f2fde38b146101fe578063f887ea4014610211578063f8c8765e1461022457600080fd5b8063bc66ce0a146101a8578063bd814842146101bb578063c33f59d3146101ce578063c45a0155146101d857600080fd5b8063715018a6116100d3578063715018a614610165578063730b86e21461016d5780638da5cb5b1461018457806395ccea671461019557600080fd5b80633516bd42146100fa578063436e667d1461012557806344224a841461013a575b600080fd5b60685461010e90600160a01b900460ff1681565b60405160ff90911681526020015b60405180910390f35b6101386101333660046113be565b610237565b005b60675461014d906001600160a01b031681565b6040516001600160a01b03909116815260200161011c565b61013861038d565b61017660001981565b60405190815260200161011c565b6033546001600160a01b031661014d565b6101386101a33660046113f6565b6103f3565b60685461014d906001600160a01b031681565b6101386101c9366004611422565b6104a7565b610176620f424081565b60665461014d906001600160a01b031681565b6101766101f936600461143f565b6105b9565b61013861020c366004611422565b6107db565b60655461014d906001600160a01b031681565b610138610232366004611478565b6108bd565b6033546001600160a01b031633146102965760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b60648160ff1611156103105760405162461bcd60e51b815260206004820152602560248201527f494e434f4d455f4d414b45523a204558434545445f50524f504f5254494f4e5f60448201527f52414e4745000000000000000000000000000000000000000000000000000000606482015260840161028d565b606880547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b60ff8481168281029390931793849055604080519290940416815260208101919091527f0cc6a17140a6f4ce27b63ba3688bb7843993b87cedde41b7da58f2d63405f2e791015b60405180910390a150565b6033546001600160a01b031633146103e75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161028d565b6103f1600061098d565b565b6033546001600160a01b0316331461044d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161028d565b6104616001600160a01b03831633836109ec565b604080516001600160a01b0384168152602081018390527f5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd9695910160405180910390a15050565b6033546001600160a01b031633146105015760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161028d565b6001600160a01b0381166105575760405162461bcd60e51b815260206004820152601a60248201527f494e434f4d455f4d414b45523a205a45524f5f41444452455353000000000000604482015260640161028d565b6068805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040805182815260208101929092527fed7b14238643cc3a509981e2f90c566f7842da34511087535632d8b2e8a139959101610382565b60665460405163e6a4390560e01b81526001600160a01b0384811660048301528381166024830152600092839291169063e6a4390590604401602060405180830381865afa15801561060f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063391906114d4565b90506001600160a01b03811661068b5760405162461bcd60e51b815260206004820152601c60248201527f494e434f4d455f4d414b45523a20504149525f4e4f545f455849535400000000604482015260640161028d565b600080846001600160a01b0316866001600160a01b0316106106ae5784866106b1565b85855b6040516370a0823160e01b815230600482015291935091506107359084906001600160a01b038216906370a0823190602401602060405180830381865afa158015610700573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072491906114f1565b6001600160a01b03861691906109ec565b60405163226bf2d160e21b815230600482015260009081906001600160a01b038616906389afcb449060240160408051808303816000875af115801561077f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a3919061150a565b9150915060006107b38584610a58565b905060006107c18584610a58565b90506107cd8183611544565b9a9950505050505050505050565b6033546001600160a01b031633146108355760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161028d565b6001600160a01b0381166108b15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161028d565b6108ba8161098d565b50565b60006108c96001610c5c565b905080156108e1576000805461ff0019166101001790555b6108e9610d77565b606880546001600160a01b0380881673ffffffffffffffffffffffffffffffffffffffff1992831617909255606580548784169083161790556066805486841690831617905560678054928516929091169190911790558015610986576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b603380546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b179052610a53908490610dea565b505050565b6068546000906001600160a01b03848116911614610baa5760665460685460405163e6a4390560e01b81526001600160a01b0386811660048301529182166024820152600092919091169063e6a4390590604401602060405180830381865afa158015610ac9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aed91906114d4565b90506001600160a01b038116610b455760405162461bcd60e51b815260206004820152601c60248201527f494e434f4d455f4d414b45523a20504149525f4e4f545f455849535400000000604482015260640161028d565b610b50848430610ecf565b606854604080516001600160a01b03808916825290921660208301528101859052606081018290529092507f8344388cfe5ad0701454f307530b263da2563c5d829476be8def9f18bc668a949060800160405180910390a1505b6067546068546040516370a0823160e01b8152306004820152610c56926001600160a01b0390811692606492600160a01b820460ff1692909116906370a0823190602401602060405180830381865afa158015610c0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2f91906114f1565b610c39919061155c565b610c43919061157b565b6068546001600160a01b031691906109ec565b92915050565b60008054610100900460ff1615610cea578160ff166001148015610c7f5750303b155b610ce25760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161028d565b506000919050565b60005460ff808416911610610d585760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161028d565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff16610de25760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161028d565b6103f16111b0565b6000610e3f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166112249092919063ffffffff16565b805190915015610a535780806020019051810190610e5d919061159d565b610a535760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161028d565b60665460685460405163e6a4390560e01b81526001600160a01b03868116600483015291821660248201526000928392169063e6a4390590604401602060405180830381865afa158015610f27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f4b91906114d4565b90506001600160a01b038116610fa35760405162461bcd60e51b815260206004820152601c60248201527f494e434f4d455f4d414b45523a20504149525f4e4f545f455849535400000000604482015260640161028d565b600080826001600160a01b0316630902f1ac6040518163ffffffff1660e01b81526004016040805180830381865afa158015610fe3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061100791906115dd565b6068546dffffffffffffffffffffffffffff92831694509116915060009081906001600160a01b03908116908a1610611041578284611044565b83835b915091506000856001600160a01b031663978bbdb96040518163ffffffff1660e01b8152600401602060405180830381865afa158015611088573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ac91906114f1565b905060006110bc826103e8611610565b6110c6908b61155c565b9050806110d5856103e861155c565b6110df9190611544565b6110e9848361155c565b6110f3919061157b565b97506111096001600160a01b038c16888c6109ec565b60685460009081906001600160a01b03908116908e161061112c57896000611130565b60008a5b6040516336cd320560e11b815260048101839052602481018290526001600160a01b038e81166044830152929450909250908a1690636d9a640a90606401600060405180830381600087803b15801561118857600080fd5b505af115801561119c573d6000803e3d6000fd5b505050505050505050505050509392505050565b600054610100900460ff1661121b5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161028d565b6103f13361098d565b6060611233848460008561123d565b90505b9392505050565b6060824710156112b55760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161028d565b6001600160a01b0385163b61130c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161028d565b600080866001600160a01b031685876040516113289190611657565b60006040518083038185875af1925050503d8060008114611365576040519150601f19603f3d011682016040523d82523d6000602084013e61136a565b606091505b509150915061137a828286611385565b979650505050505050565b60608315611394575081611236565b8251156113a45782518084602001fd5b8160405162461bcd60e51b815260040161028d9190611673565b6000602082840312156113d057600080fd5b813560ff8116811461123657600080fd5b6001600160a01b03811681146108ba57600080fd5b6000806040838503121561140957600080fd5b8235611414816113e1565b946020939093013593505050565b60006020828403121561143457600080fd5b8135611236816113e1565b6000806040838503121561145257600080fd5b823561145d816113e1565b9150602083013561146d816113e1565b809150509250929050565b6000806000806080858703121561148e57600080fd5b8435611499816113e1565b935060208501356114a9816113e1565b925060408501356114b9816113e1565b915060608501356114c9816113e1565b939692955090935050565b6000602082840312156114e657600080fd5b8151611236816113e1565b60006020828403121561150357600080fd5b5051919050565b6000806040838503121561151d57600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601160045260246000fd5b600082198211156115575761155761152e565b500190565b60008160001904831182151516156115765761157661152e565b500290565b60008261159857634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156115af57600080fd5b8151801515811461123657600080fd5b80516dffffffffffffffffffffffffffff81168114610d7257600080fd5b600080604083850312156115f057600080fd5b6115f9836115bf565b9150611607602084016115bf565b90509250929050565b6000828210156116225761162261152e565b500390565b60005b8381101561164257818101518382015260200161162a565b83811115611651576000848401525b50505050565b60008251611669818460208701611627565b9190910192915050565b6020815260008251806020840152611692816040850160208701611627565b601f01601f1916919091016040019291505056fea164736f6c634300080d000a";

type IncomeMakerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IncomeMakerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IncomeMaker__factory extends ContractFactory {
  constructor(...args: IncomeMakerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<IncomeMaker> {
    return super.deploy(overrides || {}) as Promise<IncomeMaker>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): IncomeMaker {
    return super.attach(address) as IncomeMaker;
  }
  override connect(signer: Signer): IncomeMaker__factory {
    return super.connect(signer) as IncomeMaker__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IncomeMakerInterface {
    return new utils.Interface(_abi) as IncomeMakerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IncomeMaker {
    return new Contract(address, _abi, signerOrProvider) as IncomeMaker;
  }
}
